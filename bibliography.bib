
@online{acubesat_functional_2021,
  title = {{{AcubeSAT Functional Architecture}}},
  date = {2021-05-08},
  url = {https://gitlab.com/acubesat/systems-engineering/functional-architecture}
}

@book{aguirre_introduction_space_2013,
  title = {Introduction to {{Space Systems}}: {{Design}} and {{Synthesis}}},
  shorttitle = {Introduction to {{Space Systems}}},
  author = {Aguirre, Miguel A.},
  date = {2013},
  publisher = {{Springer-Verlag}},
  location = {{New York}},
  doi = {10.1007/978-1-4614-3758-1},
  url = {https://www.springer.com/gp/book/9781461437574},
  urldate = {2021-05-23},
  abstract = {The definition of all space systems starts with the establishment of its fundamental parameters: requirements to be fulfilled, overall system and satellite design, analysis and design of the critical elements, developmental approach, cost, and schedule. There are only a few texts covering early design of space systems and none of them has been specifically dedicated to it. Furthermore all existing space engineering books concentrate on analysis. None of them deal with space system synthesis – with the interrelations between all the elements of the space system. Introduction to Space Systems concentrates on understanding the interaction between all the forces, both technical and non-technical, which influence the definition of a space system. This book refers to the entire system: space and ground segments, mission objectives as well as to cost, risk, and mission success probabilities. Introduction to Space Systems is divided into two parts. The first part analyzes the process of space system design in an abstract way. The second part of the book focuses on concrete aspects of the space system design process. It concentrates on interactions between design decisions and uses past design examples to illustrate these interactions. The idea is for the reader to acquire a good insight in what is a good design by analyzing these past designs.},
  isbn = {978-1-4614-3757-4},
  langid = {english},
  series = {Space {{Technology Library}}}
}

@thesis{anthopoulos_orbital_analysis_2020,
  title = {Orbital Analysis and the Spin-Orbit Coupling for the {{AcubeSAT}} Mission},
  author = {Anthopoulos, Asimakis and Retselis, Anastasios Faidon},
  date = {2020-10-13},
  institution = {{Aristotle University of Thessaloniki}},
  abstract = {The number of small- and nano-satellites being launched into orbit is expected to continue to grow in the coming years. In order to avoid the creation of space debris,spacecraft developers have to take action in order to reduce the severity of space debris. A widely used guideline is to ensure that no space system is left in the Low Earth Orbit environment for more than 25 years after the end of mission. Given this guideline, this thesis investigates 1U, 2U and 3U CubeSats in Low Earth Orbit using the General Mission Analysis Tool (GMAT) in order to determine the maximum allowable value of the semi-major axis so that the 25 year limit is met. This analysis results in orbital decay diagrams which can be used by CubeSat developers in order to evaluate different orbits early in the design phase. These findings are then applied to the AcubeSAT mission in order to perform an orbital analysis tailored to the mission. AcubeSAT is a 3U CubeSat that is currently being designed by students in the Aristotle University of Thessaloniki with the support of the Education Office of the European Space Agency, under the educational Fly Your Satellite! programme. The objective of AcubeSAT’s mission is to probe the expression of eukaryotic genes in the environment of Low Earth Orbit. AcubeSAT’s design calls for a very specific orientation to be achieved in order to downlink all images to the ground segment. This orientation is evaluated using the theory of spin-orbit coupling to determine if this orientation can be maintained in the event of a failure in the Attitude Determination \& Control Subsystem of the spacecraft. Based on the findings, an alternative design solution is also proposed.},
  langid = {english}
}

@article{bearden_complexitybased_risk_2003,
  title = {A Complexity-Based Risk Assessment of Low-Cost Planetary Missions: When Is a Mission Too Fast and Too Cheap?},
  shorttitle = {A Complexity-Based Risk Assessment of Low-Cost Planetary Missions},
  author = {Bearden, David A.},
  date = {2003-01-01},
  journaltitle = {Acta Astronautica},
  shortjournal = {Acta Astronautica},
  volume = {52},
  pages = {371--379},
  issn = {0094-5765},
  doi = {10.1016/S0094-5765(02)00177-7},
  url = {https://www.sciencedirect.com/science/article/pii/S0094576502001777},
  urldate = {2021-04-04},
  abstract = {Under constrained budgets and rigid schedules, NASA and industry have greatly increased their utilization of small satellites to conduct low-cost planetary investigations. Recent failed small planetary science spacecraft such as Mars Polar Lander (MPL) and Mars Climate Orbiter (MCO), and impaired missions such as Mars Global Surveyor (MGS) have fueled the ongoing debate on whether NASA's “Faster, Better, Cheaper” (FBC) approach is working. Several noteworthy failures of earth-orbiting missions have occurred as well including Lewis and the Wide-field Infrared Experiment (WIRE). While recent studies have observed that FBC has resulted in lower costs and shorter development times, these benefits may have been achieved at the expense of lowering probability of success. One question remaining to be answered is when is a mission “too fast and too cheap” that it is prone to failure? This paper assesses NASA FBC missions in terms of a complexity index measured against development time and spacecraft cost. A comparison of relative failure rates of recent planetary and earth-orbiting missions are presented, and conclusions regarding dependence on system complexity are drawn.},
  langid = {english},
  number = {2},
  series = {Selected {{Proceedings}} of the 4th {{IAA International}} Conference on {{L}} Ow {{Cost Planetary Missions}}}
}

@incollection{bittner_integrated_process_2014,
  title = {An {{Integrated Process}} for {{FDIR Design}} in {{Aerospace}}},
  booktitle = {Model-{{Based Safety}} and {{Assessment}}},
  author = {Bittner, Benjamin and Bozzano, Marco and Cimatti, Alessandro and De Ferluc, Regis and Gario, Marco and Guiotto, Andrea and Yushtein, Yuri},
  editor = {Ortmeier, Frank and Rauzy, Antoine},
  date = {2014},
  volume = {8822},
  pages = {82--95},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-319-12214-4_7},
  url = {http://link.springer.com/10.1007/978-3-319-12214-4_7},
  urldate = {2021-04-04},
  abstract = {The correct operation of complex critical systems increasingly relies on the ability to detect and recover from faults. The design of Fault Detection, Isolation and Recovery (FDIR) sub-systems is highly challenging, due to the complexity of the underlying system, the number of faults to be considered and their dynamics. Existing industrial practices for FDIR are often based on ad-hoc solutions, that are conceived and developed late in the design process, and do not consider the software- and system-level RAMS analyses data (e.g., FTA and FMEA). In this paper we propose the FAME process: a novel, model-based, integrated process for FDIR design, that addresses the shortcomings of existing practices. This process aims at enabling a consistent and timely FDIR conception, development, verification and validation. The process is supported by the FAME environment, a model-based toolset that encompasses a wide range of formal analyses, and supports the FDIR design by providing functionality to define mission and FDIR requirements, fault propagation modeling, and automated synthesis of FDIR models. The FAME process and environment have been developed within an ESA-funded study, and have been thoroughly evaluated by the industrial partners on a case study derived from the ExoMars project.},
  isbn = {978-3-319-12213-7 978-3-319-12214-4},
  langid = {english},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@article{bouwmeester_survey_implementation_2017,
  title = {Survey on the Implementation and Reliability of {{CubeSat}} Electrical Bus Interfaces},
  author = {Bouwmeester, Jasper and Langer, Martin and Gill, Eberhard},
  date = {2017-06-01},
  journaltitle = {CEAS Space Journal},
  shortjournal = {CEAS Space J},
  volume = {9},
  pages = {163--173},
  issn = {1868-2510},
  doi = {10.1007/s12567-016-0138-0},
  url = {https://doi.org/10.1007/s12567-016-0138-0},
  urldate = {2021-05-20},
  abstract = {This paper provides results and conclusions on a survey on the implementation and reliability aspects of CubeSat bus interfaces, with an emphasis on the data bus and power distribution. It provides recommendations for a future CubeSat bus standard. The survey is based on a literature study and a questionnaire representing 60 launched CubeSats and 44 to be launched CubeSats. It is found that the bus interfaces are not the main driver for mission failures. However, it is concluded that the Inter Integrated Circuit (I2C) data bus, as implemented in a great majority of the CubeSats, caused some catastrophic satellite failures and a vast amount of bus lockups. The power distribution may lead to catastrophic failures if the power lines are not protected against overcurrent. A connector and wiring standard widely implemented in CubeSats is based on the PC/104 standard. Most participants find the 104 pin connector of this standard too large. For a future CubeSat bus interface standard, it is recommended to implement a reliable data bus, a power distribution with overcurrent protection and a wiring harness with smaller connectors compared with PC/104.},
  langid = {english},
  number = {2}
}

@article{burlyaev_system_faulttolerance_2014,
  title = {System Fault-Tolerance Analysis of {{COTS}}-Based Satellite on-Board Computers},
  author = {Burlyaev, Dmitry and family=Leuken, given=Rene, prefix=van, useprefix=true},
  date = {2014-10-01},
  journaltitle = {Microelectronics Journal},
  shortjournal = {Microelectronics Journal},
  volume = {45},
  pages = {1335--1341},
  issn = {0026-2692},
  doi = {10.1016/j.mejo.2014.01.007},
  url = {https://www.sciencedirect.com/science/article/pii/S0026269214000081},
  urldate = {2021-04-04},
  abstract = {Fault-tolerance analysis reveals possible system behavior under the influence of faults. Such analysis is essential for satellites where faults might be caused by space radiation and autonomous recovery is needed. In this paper we present a statistical simulation approach for fault-tolerance analysis of satellite On-Board Computers (OBCs) that are based on Commercial Off-The-Shelf (COTS) components. Since the logic level of COTS electronics is unknown to satellite designers, a new higher-level fault-tolerance analysis is required. We propose such technique that relies on OBC modeling and fault modeling, based on the modeling principle of Single-Event Upsets (SEUs). For the first time we can compare the efficiency of fault-tolerance techniques implemented in software and Field-Programmable Gate Array (FPGA). In addition, our approach enables to analyze system fault-tolerance at early development stages. In a case study the approach is applied to an OBC with a Microsemi SmartFusion SoC, that executes a satellite attitude control algorithm. The gained statistical simulation results enabled 50\% reduction in the hardware overhead of the implemented memory scrubbing technique without loss in fault-tolerance. Our method revealed critical fault-tolerance drawbacks of the initial system design that could have lead to satellite mission failure.},
  langid = {english},
  number = {10},
  series = {{{DCIS}}’12 {{Special Issue}}}
}

@report{CDS13,
  title = {{{CubeSat Design Specification Rev}}. 13},
  author = {{California Polytechnic State University}},
  date = {2014-02-20},
  url = {https://www.cubesat.org/s/cds_rev13_final2.pdf}
}

@article{chang_development_reliabilitycorrected_2013,
  title = {Development of Reliability-Corrected Cost Model for {{Small Earth Observation}} Satellites},
  author = {Chang, Young K. and Kim, Hongrae and Kang, Jin S.},
  date = {2013-07-01},
  journaltitle = {Acta Astronautica},
  shortjournal = {Acta Astronautica},
  volume = {88},
  pages = {163--175},
  issn = {0094-5765},
  doi = {10.1016/j.actaastro.2012.10.004},
  url = {https://www.sciencedirect.com/science/article/pii/S0094576512003827},
  urldate = {2021-04-04},
  abstract = {In this study, a novel reliability-corrected cost model for estimating the development cost of highly agile small EO (Earth Observation) satellites is presented. In order to develop the cost model of highly agile small EO satellites, a database has been constructed consisting of 49 satellites carrying electro-optical payloads and having a launch mass between 100kg and 1,000kg that have either been developed or being developed within a time frame from 1991 to 2011. The cost model of top-down type was developed by analyzing the database statistically. The reliability-corrected CER (Cost Estimating Relationships) developed in this study implement multiple parameters-based complexity indexes. In addition, the Cost Correction Factor (CCF) and Low Cost Small Satellite (LCSS) adjustment factor were newly introduced as additional parameters for cost estimation. The reliability-corrected CERs for 26 EO satellites were used for verification of the cost model developed in this study. It was observed that there are approximately 7\% of absolute average errors in the reliability-corrected CER. It is concluded that this cost model can provide cost estimates with a higher accuracy, as compared to conventional cost models such as USCM and SSCM. Finally, this paper also describes the results of cost estimation obtained by applying the developed cost model to highly agile small electro-optical satellites having specific performance requirements.},
  langid = {english}
}

@incollection{clerigo_one_standard,
  title = {One {{Standard}} to {{Rule Them All}}: The {{Tailoring}} of {{PUS}}-{{C}} for {{Future ESA Missions}}},
  shorttitle = {One {{Standard}} to {{Rule Them All}}},
  booktitle = {2018 {{SpaceOps Conference}}},
  author = {Clerigo, Ignacio and Accomazzo, Andrea and Collins, Peter and Mardle, Nic and Montagnon, Elsa and Morales-Santiago, Jose-M. and Tanco, Ignacio},
  publisher = {{American Institute of Aeronautics and Astronautics}},
  doi = {10.2514/6.2018-2399},
  url = {https://arc.aiaa.org/doi/abs/10.2514/6.2018-2399},
  urldate = {2021-05-23},
  annotation = {\_eprint: https://arc.aiaa.org/doi/pdf/10.2514/6.2018-2399}
}

@online{cubesat_database,
  title = {{{CubeSat Database}} - Swartwout},
  url = {https://sites.google.com/a/slu.edu/swartwout/home/cubesat-database},
  urldate = {2021-05-20},
  abstract = {CubeSat Database}
}

@inproceedings{daradimos_satnogs_comms_2019,
  title = {{{SatNOGS COMMS}}},
  author = {Daradimos, Ilias and {Manolis Surligas}},
  date = {2019-10-16},
  publisher = {{Libre Space Foundation}},
  url = {https://events.libre.space/event/3/contributions/74/attachments/60/85/SatNOGS_COMMS.pdf},
  eventtitle = {Open {{Source CubeSat Workshop}} 2019},
  langid = {english}
}

@misc{DDJF_AOCS,
  title = {{{AcubeSAT AOCS DDJF}}},
  author = {Savvidis, Georgios and Voulgarakis, Romanos and Papafotiou, Theodoros and Moustakas, Vasileios and Mylonas, Emmanouil and Pappa, Vasiliki},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_AOCS.pdf}
}

@misc{DDJF_OBDH,
  title = {{{AcubeSAT OBDH DDJF}}},
  author = {Kanavouras, Konstantinos and Pavlakis, Grigorios},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_OBDH.pdf}
}

@misc{DDJF_OBSW,
  title = {{{AcubeSAT OBSW DDJF}}},
  author = {Kanavouras, Konstantinos and Kozaris, Ioannis and Theocharis, Athanasios and Pavlakis, Grigorios and Stoupis, Dimitrios},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_OBSW.pdf}
}

@misc{DDJF_PL,
  title = {{{AcubeSAT Payload DDJF}}},
  author = {Arampatzis, Asterios and Zaras, Alexios and Matsatsos, Panagiotis and Ousoultzoglou, Orestis and Nikolopoulou, Drosoula and Sandaltzopoulou, Elissavet},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_PL.pdf}
}

@misc{DDJF_SYS,
  title = {{{AcubeSAT System DDJF}}},
  author = {Anastasios-Faidon, Retselis and Kanavouras, Konstantinos and Pavlakis, Grigorios},
  date = {2021},
  publisher = {{SpaceDot}},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_SYS.pdf}
}

@misc{DDJF_TTC,
  title = {{{AcubeSAT TTC DDJF}}},
  author = {Kapoglis, Konstantinos and Chatziargyriou, Eleftheria},
  date = {2021},
  publisher = {{SpaceDot}},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/DDJF/DDJF_TTC.pdf}
}

@article{durou_hierarchical_fault_2002,
  title = {Hierarchical Fault Detection, Isolation and Recovery Applied to Cof and Atv Avionics},
  author = {Durou, O. and Godet, V. and Mangane, L. and Pérarnaud, D. and Roques, R.},
  date = {2002-05-01},
  journaltitle = {Acta Astronautica},
  shortjournal = {Acta Astronautica},
  volume = {50},
  pages = {547--556},
  issn = {0094-5765},
  doi = {10.1016/S0094-5765(01)00212-0},
  url = {https://www.sciencedirect.com/science/article/pii/S0094576501002120},
  urldate = {2021-04-03},
  abstract = {The avionics architecture of in-orbit infrastructure elements is driven by safety. Safety of the crew inside the Columbus Orbital Facility (COF) laboratory module, safety of the Space Station as a whole for the automated transfer vehicle (ATV) when performing a rendezvous manoeuvre. The design answers on safety requirements, methods and tools used for the development stem from a common concept. The paper first describes the COF Data Management System architecture, basically organised in two layers with a strict hierarchical relationship. The vital layer is in charge of COF initial activation, safety supervision and emergency modes management. The nominal layer is a distributed system, organised around a local area Ethernet network. Under normal conditions, it is in charge of its own fault management supported by management agents distributed in the system. Fault detection criteria are derived from an FMECA (failure mode, effect and criticality analysis) and also from a SEEA (software error effect analysis). Recovery actions are allocated to various decision levels in the hierarchy depending on their time criticality. In ATV, the same principles apply, but the implementation is adapted to the peculiarities of an automated vehicle. The nominal layer, because of the time constraints bearing upon any reconfiguration, implements fault masking (majority voting) instead of fault detection and recovery.The vital layer is allocated the very critical task of monitoring the spacecraft attitude and velocity, and performing if necessary a collision avoidance manoeuvre. An end-to-end comprehensive methodology is put in place to be able to demonstrate the compliance of the systems to technical, product assurance and safety requirements.},
  langid = {english},
  number = {9}
}

@report{ECSS-E-70-41A,
  title = {{{ECSS}}-{{E}}-70-{{41A}} – {{Telemetry}} and Telecommand Packet Utilization},
  author = {{ECSS Secretariat}},
  date = {2003-01-30},
  institution = {{European Space Agency}},
  url = {https://ecss.nl/standard/ecss-e-70-41a-ground-systems-and-operations-telemetry-and-telecommand-packet-utilization/},
  urldate = {2021-05-24},
  abstract = {This Standard addresses the utilization of telecommand packets and telemetry source packets for the purposes of remote monitoring and control of subsystems and payloads.}
}

@report{ECSS-E-ST-70-41C,
  title = {{{ECSS}}-{{E}}-{{ST}}-70-{{41C}} – {{Telemetry}} and Telecommand Packet Utilization},
  author = {{ECSS Secretariat}},
  date = {2016-04-15},
  institution = {{European Space Agency}},
  url = {https://ecss.nl/standard/ecss-e-st-70-41c-space-engineering-telemetry-and-telecommand-packet-utilization-15-april-2016/},
  abstract = {This Standard addresses the utilization of telecommand packets and telemetry packets for the purposes of remote monitoring and control of spacecraft subsystems and payloads.}
}

@article{erlank_reliability_analysis_2018,
  title = {Reliability Analysis of Multicellular System Architectures for Low-Cost Satellites},
  author = {Erlank, A. O. and Bridges, C. P.},
  date = {2018-06-01},
  journaltitle = {Acta Astronautica},
  shortjournal = {Acta Astronautica},
  volume = {147},
  pages = {183--194},
  issn = {0094-5765},
  doi = {10.1016/j.actaastro.2018.04.006},
  url = {https://www.sciencedirect.com/science/article/pii/S0094576517302771},
  urldate = {2021-04-04},
  abstract = {Multicellular system architectures are proposed as a solution to the problem of low reliability currently seen amongst small, low cost satellites. In a multicellular architecture, a set of independent k-out-of-n systems mimic the cells of a biological organism. In order to be beneficial, a multicellular architecture must provide more reliability per unit of overhead than traditional forms of redundancy. The overheads include power consumption, volume and mass. This paper describes the derivation of an analytical model for predicting a multicellular system's lifetime. The performance of such architectures is compared against that of several common forms of redundancy and proven to be beneficial under certain circumstances. In addition, the problem of peripheral interfaces and cross-strapping is investigated using a purpose-developed, multicellular simulation environment. Finally, two case studies are presented based on a prototype cell implementation, which demonstrate the feasibility of the proposed architecture.},
  langid = {english}
}

@article{faure_lean_satellites_2017,
  title = {Toward Lean Satellites Reliability Improvement Using {{HORYU}}-{{IV}} Project as Case Study},
  author = {Faure, Pauline and Tanaka, Atomu and Cho, Mengu},
  date = {2017-04-01},
  journaltitle = {Acta Astronautica},
  shortjournal = {Acta Astronautica},
  volume = {133},
  pages = {33--49},
  issn = {0094-5765},
  doi = {10.1016/j.actaastro.2016.12.030},
  url = {https://www.sciencedirect.com/science/article/pii/S009457651630724X},
  urldate = {2021-05-20},
  abstract = {Lean satellite programs are programs in which the satellite development philosophy is driven by fast delivery and low cost. Though this concept offers the possibility to develop and fly risky missions without jeopardizing a space program, most of these satellites suffer infant mortality and fail to achieve their mission minimum success. Lean satellites with high infant mortality rate indicate that testing prior to launch is insufficient. In this study, the authors monitored failures occurring during the development of the lean satellite HORYU-IV to identify the evolution of the cumulative number of failures against cumulative testing time. Moreover, the sub-systems driving the failures depending on the different development phases were identified. The results showed that half to 2/3 of the failures are discovered during the early stage of testing. Moreover, when the mean time before failure was calculated, it appeared that for any development phase considered, a new failure appears on average every 20h of testing. Simulations were also performed and it showed that for an initial testing time of 50h, reliability after 1 month launch can be improved by nearly 6 times as compared to an initial testing time of 20h. Through this work, the authors aim at providing a qualitative reference for lean satellites developers to better help them manage resources to develop lean satellites following a fast delivery and low cost philosophy while ensuring sufficient reliability to achieve mission minimum success.},
  langid = {english}
}

@misc{FMEA,
  title = {{{AcubeSAT FMEA File}}},
  author = {Retselis, Anastasios-Faidon and Kanavouras, Konstantinos},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/FMEA%20file/FMEA.pdf}
}

@article{kaufeler_esa_standard_1994,
  title = {The {{ESA}} Standard for Telemetry and Telecommand Packet Utilisation: {{PUS}}},
  shorttitle = {The {{ESA}} Standard for Telemetry and Telecommand Packet Utilisation},
  author = {Kaufeler, Jean-Francois},
  date = {1994-11-01},
  url = {https://core.ac.uk/download/pdf/42783096.pdf},
  urldate = {2021-05-24},
  abstract = {ESA has developed standards for packet telemetry and telecommand, which are derived from the recommendations of the Inter-Agency Consultative Committee for Space Data Systems (CCSDS). These standards are now mandatory for future ESA programs as well as for many programs currently under development. However, while these packet standards address the end-to-end transfer of telemetry and telecommand data between applications on the ground and Application Processes on-board, they leave open the internal structure or content of the packets. This paper presents the ESA Packet Utilization Standard (PUS) which addresses this very subject and, as such, serves to extend and complement the ESA packet standards. The goal of the PUS is to be applicable to future ESA missions in all application areas (Telecommunications, Science, Earth Resources, microgravity, etc.). The production of the PUS falls under the responsibility of the ESA Committee for Operations and EGSE Standards (COES).},
  eventtitle = {Space {{Mission Operations}} and {{Ground Data Systems}}}
}

@article{lan_document_classification,
  title = {Document {{Classification}}},
  author = {Lan, Wenschel},
  pages = {42},
  langid = {english}
}

@article{langer_reliability_cubesats_2016,
  title = {Reliability of {{CubeSats}} – {{Statistical Data}}, {{Developers}}’ {{Beliefs}} and the {{Way Forward}}},
  author = {Langer, M. and Bouwmeester, J.},
  date = {2016},
  journaltitle = {Proceedings of the 30th Annual AIAA/USU Conference on Small Satellites},
  url = {https://repository.tudelft.nl/islandora/object/uuid%3A4c6668ff-c994-467f-a6de-6518f209962e},
  urldate = {2021-05-20},
  abstract = {In this paper we investigate the data on 178 launched CubeSats and conduct a nonparametric and parametric analysis, where the dead-on-arrival (DOA) cases as well as the subsystem contribution to failure are specifically addressed. Using Maximum Likelihood Estimation, a Single Weibull and a 2-Weibull mixture parametric model are fitted to the non-parametric data. Furthermore, by combining developers’ beliefs on several reliability aspects from a survey conducted in late 2014 with data from past missions, we make a first attempt to correlate space engineering “best guesses” and intuition to actual data. Finally, the probabilistic CubeSat reliability estimation tool is introduced as a method to reduce the infant mortality of CubeSats: CubeSat developers should be able to estimate their required functional testing time on subsystem and system level at an early project stage, while targeting a desired reliability goal on their CubeSat.},
  langid = {english}
}

@article{latachi_reusable_reliable_2020,
  title = {Reusable and {{Reliable Flight}}-{{Control Software}} for a {{Fail}}-{{Safe}} and {{Cost}}-{{Efficient Cubesat Mission}}: {{Design}} and {{Implementation}}},
  shorttitle = {Reusable and {{Reliable Flight}}-{{Control Software}} for a {{Fail}}-{{Safe}} and {{Cost}}-{{Efficient Cubesat Mission}}},
  author = {Latachi, Ibtissam and Rachidi, Tajjeeddine and Karim, Mohammed and Hanafi, Ahmed},
  date = {2020-10},
  journaltitle = {Aerospace},
  volume = {7},
  pages = {146},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  doi = {10.3390/aerospace7100146},
  url = {https://www.mdpi.com/2226-4310/7/10/146},
  urldate = {2021-05-22},
  abstract = {While there is no rigorous framework to develop nanosatellites flight software, this manuscript aimed to explore and establish processes to design a reliable and reusable flight software architecture for cost-efficient student Cubesat missions such as Masat-1. Masat-1 is a 1Unit CubeSat, developed using a systems engineering approach, off-the-shelf components and open-source software tools. It was our aim to use it as a test-bed platform and as an initial reference for Cubesat flight software development in Morocco. The command and data handling system chosen for Masat-1 is a system-on-module-embedded computer running freeRTOS. A real-time operating system was used in order to simplify the real-time onboard management. To ensure software design reliability, modularity, reusability and extensibility, our solution follows a layered service oriented architectural pattern, and it is based on a finite state machine in the application layer to execute the mission functionalities in a deterministic manner. Moreover, a client-server model was elected to ensure the inter-process communication and resources access while using uniform APIs to enhance cross-platform data exchange. A hierarchical fault tolerance architecture was also implemented after a systematic assessment of the Masat-1 mission risks using reliability block diagrams (RBDs) and functional failure mode, effect and criticality analysis (FMECA).},
  issue = {10},
  langid = {english},
  number = {10}
}

@misc{MAIVP,
  title = {{{AcubeSAT Manufacturing}}, {{Assembly}}, {{Integration}} and {{Verification File}}},
  author = {Retselis, Anastasios-Faidon and Litsiou, Evdoxia and Kanavouras, Konstantinos and Arampatzis, Asterios and Theocharis, Athanasios and Kozaris, Ioannis and Karakosta-Amarantidou, Electra and Pavlakis, Grigorios and Savvidis, Georgios and Papafotiou, Theodoros and Chatziargyriou, Eleftheria and Adamidis, Marios},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/MAIVP%20file/MAIVP.pdf}
}

@misc{MDO,
  title = {{{AcubeSAT Mission Description}} \& {{Operations Plan}}},
  author = {Zaras, Alexios and Kapoglis, Konstantinos and Georgousi, Maria and Papafotiou, Theodoros and Chadolias, Michael and Anthopoulos, Asimakis and Retselis, Anastasios-Faidon and Arampatzis, Asterios and Xenos, Konstantinos-Odysseas and Christidou, Eleni},
  date = {2021},
  url = {https://gitlab.com/acubesat/documentation/cdr-public/-/blob/master/MDO%20file/MDO.pdf}
}

@report{PC104,
  title = {{{PC}}/104 {{Specification}}},
  author = {{PC/104 Embedded Consortium}},
  date = {2008-08-13},
  url = {https://pc104.org/wp-content/uploads/2015/02/PC104_Spec_v2_6.pdf},
  annotation = {version=2.6}
}

@inproceedings{quinn_singleevent_effects_2014,
  title = {Single-{{Event Effects}} in {{Low}}-{{Cost}}, {{Low}}-{{Power Microprocessors}}},
  booktitle = {2014 {{IEEE Radiation Effects Data Workshop}} ({{REDW}})},
  author = {Quinn, H. and Fairbanks, T. and Tripp, J. L. and Duran, G. and Lopez, B.},
  date = {2014-07},
  pages = {1--9},
  issn = {2154-0535},
  doi = {10.1109/REDW.2014.7004596},
  abstract = {ARMs and microcontrollers are low-cost, low-power microprocessors that are frequently used in embedded computing. While not immune to the naturally occurring radiation environment in space, these microprocessors can be worthwhile replacements for space-grade microprocessors for non-mission-critical computational tasks. In this paper results from radiation testing for several available ARMs and microcontrollers are presented.},
  eventtitle = {2014 {{IEEE Radiation Effects Data Workshop}} ({{REDW}})}
}

@report{SAVOIR-HB-003,
  title = {{{SAVOIR FDIR Handbook}}},
  author = {{Space Avionics Open interface Architecture}},
  date = {2019-10},
  institution = {{European Space Agency}},
  url = {https://essr.esa.int/project/savoir},
  number = {SAVOIR-HB-003}
}

@book{smad,
  title = {Space {{Mission Analysis}} and {{Design}}},
  author = {Wertz, J. R. and Larson, Wiley J.},
  date = {1999-09-30},
  edition = {3rd edition},
  publisher = {{Springer}},
  location = {{El Segundo, Calif. : Dordrecht ; Boston}},
  abstract = {This famous and practical handbook for Space Mission Engineering draws on leading aerospace experts to carry readers through mission design, from orbit selection to ground ops. SMAD III updates the technology, provides greater emphasis on small spacecraft design and the cost-reduction process, and includes more detail on multi-satellite manufacturing, space computers, payload design and autonomous systems.},
  isbn = {978-0-7923-5901-2},
  langid = {english},
  pagetotal = {996}
}

@inproceedings{surligas_satnogscomms_2021,
  title = {{{SatNOGS}}-{{COMMS}}},
  author = {Surligas, Manolis},
  date = {2021-04-12},
  pages = {22},
  eventtitle = {{{CubeSat Developers Workshop}}},
  langid = {english}
}

@article{white_overview_satellite_2018,
  title = {Overview of the {{Satellite Networked Open Ground Stations}} ({{SatNOGS}}) {{Project}}},
  author = {White, Dan and Shields, Corey and Papadeas, Pierros and Zisimatos, Agisilaos and Surligas, Manolis and Papamatthaiou, Matthaios and Papadeas, Dimitrios and Kosmas, Eleytherios},
  date = {2018-08-08},
  journaltitle = {Small Satellite Conference},
  url = {https://digitalcommons.usu.edu/smallsat/2018/all2018/313},
  abstract = {The SatNOGS, or Satellite Network Open Ground Stations, project promotes and supports free and open space applications. It seeks to address the problem of connecting many satellite users/observers to many ground station operators. Modern Open Source software, web, and hardware techniques are used in implementing the Network, Database, Client, and Ground Station sub-projects. Modularity in all the systems promotes the dual-use of ground stations by not interfering with local operation while utilizing the great amount of time a civilian, non-commercial ground station would otherwise sit idle.}
}

@article{zolghadri_advanced_modelbased_2012,
  title = {Advanced Model-Based {{FDIR}} Techniques for Aerospace Systems: {{Today}} Challenges and Opportunities},
  shorttitle = {Advanced Model-Based {{FDIR}} Techniques for Aerospace Systems},
  author = {Zolghadri, Ali},
  date = {2012-08-01},
  journaltitle = {Progress in Aerospace Sciences},
  shortjournal = {Progress in Aerospace Sciences},
  volume = {53},
  pages = {18--29},
  issn = {0376-0421},
  doi = {10.1016/j.paerosci.2012.02.004},
  url = {https://www.sciencedirect.com/science/article/pii/S0376042112000292},
  urldate = {2021-04-03},
  abstract = {This paper discusses some trends and recent advances in model-based Fault Detection, Isolation and Recovery (FDIR) for aerospace systems. The FDIR challenges range from pre-design and design stages for upcoming and new programs, to improvement of the performance of in-service flying systems. For space missions, optimization of flight conditions and safe operation is intrinsically related to GNC (Guidance, Navigation \& Control) system of the spacecraft and includes sensors and actuators monitoring. Many future space missions will require autonomous proximity operations including fault diagnosis and the subsequent control and guidance recovery actions. For upcoming and future aircraft, one of the main issues is how early and robust diagnosis of some small and subtle faults could contribute to the overall optimization of aircraft design. This issue would be an important factor for anticipating the more and more stringent requirements which would come in force for future environmentally-friendlier programs. The paper underlines the reasons for a widening gap between the advanced scientific FDIR methods being developed by the academic community and technological solutions demanded by the aerospace industry.},
  langid = {english}
}


